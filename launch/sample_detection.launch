<launch>

  <arg name="standalone" default="false"/> <!-- debug nodes by setting then standalone -->
  <arg name="MANAGER" value="detic_detection_manager" unless="$(arg standalone)"/>
  <arg name="MANAGER" value="" if="$(arg standalone)"/>
  <arg name="LOAD_STATEMENT" value="load" unless="$(arg standalone)"/>
  <arg name="LOAD_STATEMENT" value="standalone" if="$(arg standalone)"/>

  <arg name="namespace" default="docker" />

  <arg name="input_image" default="/kinect_head/rgb/image_rect_color"/>
  <arg name="input_depth" default="/kinect_head/depth_registered/image"/>
  <arg name="input_camera_info" default="/kinect_head/depth_registered/camera_info"/>
  <arg name="model_type" default="res50"/>
  <arg name="vocabulary" default="lvis"/>
  <arg name="custom_vocabulary" default=""/>
  <arg name="confidence_threshold" default="0.5"/>
  <arg name="debug" default="false"/>

  <arg name="_input_image" default="/$(arg namespace)/decompressed_image"/>
  <arg name="_input_depth" default="/$(arg namespace)/decompressed_depth"/>
  <arg name="target_frame_id" default="base_footprint" />

  <group ns='$(arg namespace)'>

    <node name="$(arg MANAGER)" pkg="nodelet" type="nodelet" args="manager"/>

    <include file="$(find detic_ros)/launch/decompress_depth.launch">
      <arg name="input_image" value="$(arg input_image)"/>
      <arg name="input_depth" value="$(arg input_depth)"/>
      <rosparam>
        queue_size: 100
      </rosparam>
    </include>

    <node pkg="nodelet" type="nodelet" name="decompress_points"
          args="$(arg LOAD_STATEMENT) depth_image_proc/point_cloud_xyzrgb $(arg MANAGER)">
      <remap from="rgb/camera_info" to="$(arg input_camera_info)"/>
      <remap from="rgb/image_rect_color" to="$(arg _input_image)"/>
      <remap from="depth_registered/image_rect" to="$(arg _input_depth)"/>
      <rosparam>
        queue_size: 100
      </rosparam>
    </node>

  <node name="detic_segmentor" pkg="detic_ros" type="node.py" output="screen">
      <remap from="~input_image" to="$(arg _input_image)"/>
      <param name="enable_pubsub" value="true"/>
      <param name="use_jsk_msgs" value="true"/>
      <param name="verbose" value="$(arg debug)"/>
      <param name="out_debug_img" value="$(arg debug)"/>
      <param name="out_debug_segimg" value="$(arg debug)"/>
      <param name="model_type" value="$(arg model_type)"/>
      <param name="vocabulary" value="$(arg vocabulary)"/>
      <param name="custom_vocabulary" value="$(arg custom_vocabulary)"/>
      <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
    </node>

    <node name="detic_label_image_to_indices"
          pkg="nodelet" type="nodelet"
          args="$(arg LOAD_STATEMENT) jsk_pcl_utils/LabelToClusterPointIndices $(arg MANAGER)">
      <remap from="~input" to="detic_segmentor/segmentation"/>
      <remap from="~output" to="detic_segmentor/indices"/>
    </node>

    <!-- cluster_filter: 1 is desirable, but only stable with jsk_recognition/#2739 -->
    <node name="detic_euclidean_clustering"
          pkg="nodelet" type="nodelet"
          args="$(arg LOAD_STATEMENT) jsk_pcl/EuclideanClustering $(arg MANAGER)"
          clear_params="true">
      <remap from="~input" to="depth_registered/points"/>
      <remap from="~input/cluster_indices" to="detic_segmentor/indices"/>
      <rosparam>
        multi: true
        tolerance: 0.03
        min_size: 10
        downsample_enable: true
        approximate_sync: true
        queue_size: 100
      </rosparam>
    </node>

    <node name="detic_cluster_point_indices_decomposer"
          pkg="nodelet" type="nodelet"
          args="$(arg LOAD_STATEMENT) jsk_pcl/ClusterPointIndicesDecomposer $(arg MANAGER)"
          clear_params="true">
      <remap from="~input" to="depth_registered/points"/>
      <remap from="~target" to="detic_euclidean_clustering/output"/>
      <remap from="~boxes" to="detic_segmentor/output/boxes"/>
      <remap from="~centroid_pose_array" to="detic_segmentor/output/centroid"/>
      <rosparam subst_value="true">
        align_boxes: true
        align_boxes_with_plane: false
        force_to_flip_z_axis: false
        use_pca: false
        target_frame_id: $(arg target_frame_id)
        approximate_sync: true
        queue_size: 100
      </rosparam>
    </node>

  </group>

</launch>
